{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReversed","NONE","sortType","serSortType","goods","visibleGoods","sort","el1","el2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAuBMC,EArDR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAKC,GACtB,OAAQN,GACN,KAAKT,EAASgB,SACZ,OAAOF,EAAIG,cAAcF,GAE3B,KAAKf,EAASkB,OACZ,OAAOJ,EAAIK,OAASJ,EAAII,OAE1B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EA6BOS,CAAkBpB,EAAiBQ,EAAUH,GAE3D,OACE,sBAAKgB,UAAU,MAAf,WACIlB,GACA,wBACEmB,KAAK,SACLC,QA5BM,WACZnB,GAAW,IA4BLiB,UAAU,yCAHZ,mBASDlB,GACC,mCACE,gCACE,sBACEkB,UAAU,UADZ,UAGE,wBACEC,KAAK,SACLD,UAAU,oCACVE,QApCS,WACrBd,EAAYV,EAASkB,SAgCX,gCAOA,wBACEK,KAAK,SACLD,UAAU,oCACVE,QA/CO,WACnBd,EAAYV,EAASgB,WA2CX,4BAOA,wBACEO,KAAK,SACLD,UAAU,oCACVE,QA9CE,WACdjB,GAAaD,IA0CH,qBAOA,wBACEiB,KAAK,SACLD,UAAU,oCACVE,QAjDA,WACZd,EAAYV,EAASQ,MACrBD,GAAY,IA4CF,sBASF,6BACGI,EAAMc,KAAI,SAAAC,GAAI,OACb,6BACGA,kBC9HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8660dda1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((el1, el2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return el1.localeCompare(el2);\n\n      case SortType.LENGTH:\n        return el1.length - el2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, serSortType] = useState(SortType.NONE);\n\n  const start = () => {\n    setStarted(true);\n  };\n\n  const sortByLength = () => {\n    serSortType(SortType.ALPHABET);\n  };\n\n  const sortByAlphabet = () => {\n    serSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const reset = () => {\n    serSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          onClick={start}\n          className=\"button is-success is-rounded is-size-2\"\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <div>\n            <div\n              className=\"columns\"\n            >\n              <button\n                type=\"button\"\n                className=\"column button is-info is-outlined\"\n                onClick={sortByAlphabet}\n              >\n                Sort alphabeticaly\n              </button>\n              <button\n                type=\"button\"\n                className=\"column button is-info is-outlined\"\n                onClick={sortByLength}\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                className=\"column button is-info is-outlined\"\n                onClick={reverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                className=\"column button is-info is-outlined\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul>\n              {goods.map(good => (\n                <li>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}